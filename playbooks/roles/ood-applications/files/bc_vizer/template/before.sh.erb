#!/usr/bin/env bash

# Export the module function if it exists
[[ $(type -t module) == "function" ]] && export -f module

THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Find available port to run server on (assumes find_port function exists)
port=$(find_port ${host})

<%- if OodAppkit.clusters[context.cluster].job_config[:adapter] == 'pbspro' -%>
# For PBSPro, use the job ID for the container name. If PBS_JOBID is not set, default to a timestamp.
if [ -z "${PBS_JOBID}" ]; then
  export CONTAINER_NAME=trame.$(date +%s)
else
  export CONTAINER_NAME=trame.$PBS_JOBID
fi

<%- 
  require "yaml"
  node_arrays = YAML.load_file("/etc/ood/config/apps/bc_desktop/config/node_arrays.yml")
  slot_type = node_arrays.find { |slot_type| slot_type["name"] == context.target }
  gpu_count = slot_type["gpuCount"].to_i 
-%>

<%- if gpu_count > 0 -%>
# If GPUs are available, use EGL for hardware-accelerated rendering.
gl=egl
<%- else -%>
# Otherwise, fall back to osmesa for software rendering.
gl=osmesa
<%- end -%>

# Retrieve the container image using the provided container name.
$THIS_DIR/get_container.sh <%= context.container_image %> $CONTAINER_NAME
<%- end -%>
